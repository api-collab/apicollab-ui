openapi: '3.0.0'
info:
  version: 1.0.0
  title: API Collab  - Server
  description: The API for interacting with API Collab Server. You can create applications and add associated API specifications.
  license:
    name: MIT
servers:
  - url: http://localhost:8080/api
paths:
  /applications:
    get:
      summary: List all applications
      operationId: get-all-applications
      tags:
        - Applications
      responses:
        '200':
          description: A list of applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new application
      operationId: create-new-applications
      tags:
        - Applications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        '201':
          description: Newly created API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'

  /applications/{applicationId}:
    parameters:
      - name: applicationId
        in: path
        required: true
        description: The Id of the application to retrieve
        schema:
          type: string
    get:
      summary: Retrieve information for a specific application
      operationId: get-application-by-Id
      tags:
        - Applications
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update a existing application
      operationId: update-application
      tags:
        - Applications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        '201':
          description: Newly created API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'

    delete:
      summary: Delete an application
      operationId: delete-application
      tags:
        - Applications
      responses:
        '404':
          description: Application not found with provided identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Application linked to one or more Api
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /applications/{applicationId}/apis:
    parameters:
      - name: applicationId
        in: path
        required: true
        description: The Id of the application
        schema:
          type: string
    get:
      summary: Retrieve APIs associated with a specific application
      operationId: get-apis-by-application-id
      tags:
        - Applications
      responses:
        '201':
          description: List of Apis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new API under this application
      operationId: create-new-api
      tags:
        - Applications
        - APIs
      requestBody:
        content:
          multipart/form-data:
            schema: # Request payload
              type: object
              properties: # Request parts
                id:
                  type: string
                name:
                  type: string
                version:
                  type: string
                swaggerDoc:
                  type: string
                  format: binary

      responses:
        '201':
          description: Newly created API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api'

  /apis:
    get:
      summary: Retreive All APIs
      operationId: get-apis
      tags:
        - APIs
      responses:
        '201':
          description: List of Apis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /apis/search:
    get:
      summary: Retreive All APIs using full text search
      operationId: get-apis-search
      tags:
        - APIs
      parameters:
        - name: query
          in: query
          required: false
          description: search string containing keywords
          schema:
            type: string
      responses:
        '201':
          description: List of Apis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /apis/{apiId}:
    parameters:
      - name: apiId
        in: path
        required: true
        description: The Id of the API
        schema:
          type: string
    get:
      summary: Retrieve information for a specific API
      operationId: get-api-by-id
      tags:
        - APIs
      responses:
        '201':
          description: List of Apis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete an api
      operationId: delete-api
      tags:
        - APIs
      responses:
        '404':
          description: Api not found with provided identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /apis/{apiId}/swaggerDoc:
    parameters:
      - name: apiId
        in: path
        required: true
        description: The Id of the API
        schema:
          type: string
    get:
      description: Retrieve the swagger API specification
      tags:
        - APIs
      responses:
        '201':
          description: The raw API description in plain text
          content:
            text/plain:
              schema:
                type: string

  /suggestions/{partialWord}:
    get:
      summary: Retrive all the suggestions based partial word
      operationId: get-suggestions
      tags:
        - Search
      parameters:
        - name: partialWord
          in: path
          required: true
          description: The partial word
          example: 'star'
          schema:
            type: string
      responses:
        '201':
          description: List of suggestions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestionsList'

        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Application:
      required:
        - name
        - email
      properties:
        applicationId:
          type: string
          description: Unique application reference
        name:
          type: string
          description: Name of the application
        email:
          type: string
          description: Email address of the main contact
    ApplicationList:
      allOf:
        - $ref: '#/components/schemas/GenericList'
        - type: object
          required:
            - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Application'

    Api:
      required:
        - name
        - version
      properties:
        apiId:
          type: string
          description: Unique application reference
        applicationId:
          type: string
          example: 'fcd39ef6-d9cc-4f38-a8a1-6795388aaf2c'
        name:
          type: string
          description: Name of the application
        version:
          type: string
          description: Email address of the main contact
        status:
          type: string
          enum:
            - BETA
            - STABLE,
            - DEPRECATED,
            - ARCHIVED

    GenericList:
      properties:
        totalCount:
          type: integer
          description: If available, the total count of items on the server for this type. Can be greater than the items in this payload

    ApiList:
      allOf:
        - $ref: '#/components/schemas/GenericList'
        - type: object
          required:
            - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Api'

    SuggestionsList:
      allOf:
        - $ref: '#/components/schemas/GenericList'
        - type: object
          required:
            - items
      properties:
        items:
          type: array
          items:
            type: string
          example: [start, startDate, star]

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
